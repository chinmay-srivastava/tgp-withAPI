{"version":3,"sources":["assets/placehold.jpeg","components/tiles.js","components/tile2.js","components/tiles3.js","components/tiles4.js","components/header.js","components/Main.js","App.js","serviceWorker.js","index.js","logo.svg"],"names":["module","exports","Menu","props","renderTile","game","isMobile","isTablet","Alert","color","isOpen","open","id","href","className","Collapse","Card","CardImgOverlay","icon","faTimesCircle","size","onClick","close","src","videoBg","autoPlay","CardBody","CardTitle","title","CardText","desc","state","selectedTile","games","tgp","this","setState","fetch","then","res","json","forEach","push","appid","image","free","playable","overlay","index","menu","map","Col","style","marginBottom","key","onTileSelect","width","Row","CardImg","Container","breakPoints","itemsToShow","renderPagination","pages","activePage","Component","withGetScreen","Menu2","bind","detail","Button","top","alt","name","description","details","i","Header","isNavOpen","toggleNav","Fragment","Navbar","dark","expand","NavbarToggler","logo","marginTop","NavbarBrand","navbar","Nav","marginRight","Main","newOpen","current","console","log","content","initial","end","slice","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ed154ac.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/placehold.e751f269.jpeg\";","import React, {Component,useState} from 'react';\r\nimport {Alert,Card,CardImg,CardImgOverlay,CardText,CardBody,CardTitle,Button, Collapse,Row,Col,Container,Media,} from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport '../App.css'\r\nimport {DETAILS}  from '../shared/details'\r\nimport {withGetScreen} from 'react-getscreen'\r\nimport OutsideClickHandler from 'react-outsideclickhandler';\r\nimport image from \"../assets/placehold.jpeg\"\r\nimport GridLayout from 'react-grid-layout';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\r\nimport { faCoffee, faHome, faCross, faTimes, faTimesCircle } from '@fortawesome/free-solid-svg-icons'\r\nimport ReactPlayer from 'react-player'\r\n\r\n\r\n\r\nclass Menu extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state = {\r\n      selectedTile:null,\r\n      \r\n      games:[],\r\n      tgp:[]\r\n      \r\n      // open:false\r\n    }\r\n    // this.close=this.close.bind(this);\r\n  }\r\n\r\n  onTileSelect(game){\r\n    this.setState({selectedTile:game});\r\n    this.props.close(this.props.id)\r\n  }\r\n\r\n  componentDidMount() {\r\n    fetch('https://the-gaming-project-241406.firebaseio.com/games/tgpGames2.json')\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      let allGames = [\r\n        'SGW2',\r\n        'LOTF',\r\n        'Extinction',\r\n        'Away',\r\n        'Splasher',\r\n        'Grip',\r\n        'BoilingBolt',\r\n        'SGW3',\r\n        'SteelRats',\r\n        'TFITF',\r\n        'Impulsion',\r\n        'Outcast',\r\n        'WRC4',\r\n        'Tempest',\r\n        'Pankapu',\r\n        'DragoDino',\r\n        'Anarcute',\r\n        'Supertrucks',\r\n        'Strikers',\r\n      ]\r\n      let games = [];let tgp=[];\r\n      allGames.forEach(game => {\r\n          games.push({appid: game,image:' ', desc: res[game].desc, free: res[game].free, title: res[game].title,playable:false,overlay:true,videoBg:' '})\r\n      })\r\n      games.forEach((game, index) => games.push({\r\n        id: index,\r\n        image: 'https://storage.googleapis.com/thegamingproject/games/' + game.appid + '/header.jpg',\r\n        appid: game.appid,\r\n        title: game.title,\r\n        desc: game.desc,\r\n        free: game.free,\r\n        playable: false,\r\n        overlay: true,\r\n        videoBg: 'https://storage.googleapis.com/thegamingproject/games/' + game.appid + '/videoBg.mp4'\r\n      }));\r\n      \r\n      this.setState({games});\r\n    })\r\n  }\r\n\r\n\r\n  renderTile = (game) => {\r\n    if(game!=null){\r\n      if (this.props.isMobile()||this.props.isTablet() ){\r\n        return(\r\n          <div >\r\n            <Alert color=\"danger\" isOpen={this.props.open[this.props.id]}>\r\n              Download <a href=\"#\" className=\"alert-link\">The Gaming Project App</a> to play on your smartphones.\r\n            </Alert>\r\n          </div>\r\n        );\r\n      } else {\r\n        return(\r\n          <Collapse isOpen={this.props.open[this.props.id]}>\r\n            <Card className=\"ml-5\" >\r\n            \r\n              <div className=\"mb-2\">\r\n              <CardImgOverlay>\r\n                <FontAwesomeIcon icon={faTimesCircle} size=\"50%\" onClick={() => this.props.close()}/>\r\n                </CardImgOverlay>\r\n                <video src={game.videoBg} autoPlay/>\r\n                \r\n                <CardBody>\r\n                  <CardTitle className=\"font-weight-bolder\">{game.title}</CardTitle>\r\n                  <CardText >{game.desc}</CardText>\r\n                </CardBody>\r\n              </div>\r\n              \r\n            </Card>\r\n          </Collapse> \r\n        );\r\n      }\r\n    }\r\n    else{\r\n      return(\r\n        <div></div>\r\n      );\r\n    }\r\n  }\r\n\r\n  render() {\r\n  \r\n   \r\n    const breakPoints = [\r\n      { width: 1, itemsToShow: 5 },\r\n      { width: 550, itemsToShow: 1 },\r\n      { width: 768, itemsToShow: 4 },\r\n      { width: 1200, itemsToShow: 4},\r\n    ];\r\n\r\n    \r\n    const menu = this.props.games.map(game=> {\r\n     \r\n      if (this.props.isMobile()){\r\n        return (\r\n          <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n            {/* <div  onClick={() => this.props.close()}> */}\r\n              <Card key={game.id} onClick={() => this.onTileSelect(game)}>\r\n                <img src={game.image} width=\"100%\"/>\r\n                <CardImgOverlay>\r\n                  <CardTitle className=\"font-weight-bolder\">{game.title}</CardTitle>\r\n                </CardImgOverlay>\r\n              </Card>\r\n           \r\n          </Col>\r\n        );\r\n      } else if (this.props.isTablet()){\r\n        return ( \r\n          <Row>\r\n            {/* <div  onClick={() => this.props.close()}> */}\r\n              <Card key={game.id} onClick={() => this.onTileSelect(game)}>\r\n                <CardImg src={game.image}/>\r\n                <CardImgOverlay>\r\n                  <CardTitle className=\"font-weight-bolder\">{game.title}</CardTitle>\r\n                </CardImgOverlay>\r\n              </Card>\r\n            {/* </div> */}\r\n          </Row>\r\n        );\r\n      } else {\r\n        return (  \r\n          <Col className=\"col-12 center\" >\r\n          \r\n            <div>  \r\n              <Col className=\"col-12 center\" >\r\n                <div key={game.id} onClick={() => this.onTileSelect(game)} className=\"mb-1 mt-1\">\r\n                  \r\n                    <CardImg src={game.image} width=\"100\" onClick={() => this.props.close()} className=\"p-0\"/>\r\n                    <CardImgOverlay>\r\n                      <CardTitle className=\"font-weight-bolder\">{game.title}</CardTitle>\r\n                    </CardImgOverlay>\r\n                  \r\n                </div>\r\n              </Col>\r\n              \r\n            </div>\r\n          </Col>\r\n        );\r\n      }\r\n    });\r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n        <div className=\"row\">\r\n          <Container className=\"container-fluid\">\r\n            {this.renderTile(this.state.selectedTile)}\r\n            <Row>\r\n              {menu}\r\n            </Row>\r\n          </Container>\r\n        </div>\r\n      );\r\n    } else {\r\n      return(\r\n        \r\n        <div className=\"row container\">\r\n        \r\n      \r\n            \r\n            <Carousel breakPoints={breakPoints}  renderPagination={({ pages, activePage, onClick }) => {\r\n              return (\r\n                <div> </div>\r\n              )\r\n            }} >\r\n              {menu} \r\n               </Carousel> \r\n          \r\n          \r\n            <div  className=\"col-12 center\">\r\n            {this.renderTile(this.state.selectedTile)}\r\n          </div>  \r\n          \r\n         \r\n        </div>\r\n       \r\n      );\r\n    }\r\n  }\r\n}\r\n\r\nexport default withGetScreen(Menu);","import React, {Component,useState} from 'react';\r\nimport {Alert,Card,CardImg,CardImgOverlay,CardText,CardBody,CardTitle, Button, Collapse,Row,Col,Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport {withGetScreen} from 'react-getscreen'\r\nimport image from \"../assets/placehold.jpeg\"\r\nimport GridLayout from 'react-grid-layout';\r\n\r\nclass Menu2 extends Component{\r\n  \r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        selectedTile:null,\r\n         open:false\r\n          }\r\n          this.close=this.close.bind(this);\r\n  }\r\n\r\nonTileSelect(detail){\r\n  this.setState({selectedTile:detail,\r\n \r\n  });\r\n  \r\n\r\n}\r\n\r\nclose(){\r\n  this.setState({\r\n    open:!this.state.open\r\n  });\r\n}\r\n\r\nrenderTile(detail){\r\n  \r\n  if(detail!=null ){\r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n        <div >\r\n        <Alert color=\"danger\" isOpen={this.state.open}>\r\n          Download <a href=\"#\" className=\"alert-link\">The Gaming Project App</a> to play on your smartphones.\r\n        </Alert>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n    return(\r\n    \r\n    \r\n    <Collapse isOpen={this.state.open}>\r\n    <Card >\r\n    <div>\r\n    <Button onClick={this.close}>X</Button>\r\n        \r\n      <CardImg top src={image} alt={detail.name} width=\"100%\" />\r\n      <CardBody>\r\n        <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n        <CardText >{detail.description}</CardText>\r\n      </CardBody>\r\n      </div>\r\n    </Card>\r\n    </Collapse> \r\n  \r\n  \r\n    );\r\n    }\r\n  }\r\n  else{\r\n    return(\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n \r\n\r\n  render() {\r\n   \r\n\r\n    const menu = this.props.details.map((detail,i)=> {\r\n     \r\n      if (this.props.isMobile()){\r\n        return (    \r\n        \r\n          <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n          <div  onClick={this.close}>\r\n        <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </Card>\r\n   \r\n        </div>\r\n        </Col>\r\n      \r\n                \r\n        );\r\n      }\r\n\r\n      else if (this.props.isTablet()){\r\n        return (  \r\n        \r\n          \r\n          <Row>\r\n          <div  onClick={this.close}>\r\n        <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </Card>\r\n   \r\n        </div>\r\n        </Row>\r\n        \r\n                \r\n        );\r\n      }\r\n\r\nelse{\r\n  \r\n    if (i>=4&&i<8){\r\n      return (  \r\n        <Col className=\"col-3 center\" style={{marginBottom:\"20px\"}}>\r\n        <div>\r\n        <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n          <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <Card  onClick={this.close}>\r\n        \r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        \r\n          </Card> \r\n        \r\n        </Card>\r\n        </Col>\r\n    </div>\r\n    </Col>\r\n      );\r\n      }\r\n      \r\n      \r\n    }\r\n     \r\n    });\r\n\r\n\r\n      \r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n          \r\n        <div className=\"row\">\r\n    <Container className=\"container-fluid\">\r\n    {this.renderTile(this.state.selectedTile)}\r\n      <Row>\r\n      {menu}\r\n      </Row>\r\n      \r\n      \r\n        </Container>\r\n    </div>\r\n          );\r\n    }\r\n       else{\r\n          return(\r\n          \r\n          <div className=\"row\">\r\n      <Container className=\"container-fluid\">\r\n\r\n        <Row>\r\n        {menu}\r\n        </Row>\r\n        {this.renderTile(this.state.selectedTile)}\r\n        \r\n          </Container>\r\n      </div>\r\n            );\r\n      }\r\n      }\r\n    }\r\n  \r\n\r\n      export default withGetScreen(Menu2);","import React, {Component,useState} from 'react';\r\nimport {Alert,Card,CardImg,CardImgOverlay,CardText,CardBody,CardTitle, Button, Collapse,Row,Col,Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport {withGetScreen} from 'react-getscreen'\r\nimport image from \"../assets/placehold.jpeg\"\r\nimport GridLayout from 'react-grid-layout';\r\n\r\nclass Menu extends Component{\r\n  \r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        selectedTile:null,\r\n         open:false\r\n          }\r\n          this.close=this.close.bind(this);\r\n  }\r\n\r\nonTileSelect(detail){\r\n  this.setState({selectedTile:detail,\r\n \r\n  });\r\n  \r\n\r\n}\r\n\r\nclose(){\r\n  this.setState({\r\n    open:!this.state.open\r\n  });\r\n}\r\n\r\nrenderTile(detail){\r\n  \r\n  if(detail!=null ){\r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n        <div >\r\n        <Alert color=\"danger\" isOpen={this.state.open}>\r\n          Download <a href=\"#\" className=\"alert-link\">The Gaming Project App</a> to play on your smartphones.\r\n        </Alert>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n    return(\r\n    \r\n    \r\n    <Collapse isOpen={this.state.open}>\r\n    <Card >\r\n    <div>\r\n    <Button onClick={this.close}>X</Button>\r\n        \r\n      <CardImg top src={image} alt={detail.name} width=\"100%\" />\r\n      <CardBody>\r\n        <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n        <CardText >{detail.description}</CardText>\r\n      </CardBody>\r\n      </div>\r\n    </Card>\r\n    </Collapse> \r\n  \r\n  \r\n    );\r\n    }\r\n  }\r\n  else{\r\n    return(\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n \r\n\r\n  render() {\r\n   \r\n\r\n    const menu = this.props.details.map((detail,i)=> {\r\n     \r\n      if (this.props.isMobile()){\r\n        return (    \r\n        \r\n          <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n          <div  onClick={this.close}>\r\n        <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </Card>\r\n   \r\n        </div>\r\n        </Col>\r\n      \r\n                \r\n        );\r\n      }\r\n\r\n      else if (this.props.isTablet()){\r\n        return (  \r\n        \r\n          \r\n          <Row>\r\n          <div  onClick={this.close}>\r\n        <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </Card>\r\n   \r\n        </div>\r\n        </Row>\r\n        \r\n                \r\n        );\r\n      }\r\n\r\nelse{\r\n  \r\n    if (i>=8&&i<12){\r\n      return (  \r\n        <Col className=\"col-3 center\" style={{marginBottom:\"20px\"}}>\r\n        <div>\r\n        <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n          <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <Card  onClick={this.close}>\r\n        \r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        \r\n          </Card> \r\n        \r\n        </Card>\r\n        </Col>\r\n    </div>\r\n    </Col>\r\n      );\r\n      }\r\n      \r\n      \r\n    }\r\n     \r\n    });\r\n\r\n\r\n      \r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n          \r\n        <div className=\"row\">\r\n    <Container className=\"container-fluid\">\r\n    {this.renderTile(this.state.selectedTile)}\r\n      <Row>\r\n      {menu}\r\n      </Row>\r\n      \r\n      \r\n        </Container>\r\n    </div>\r\n          );\r\n    }\r\n       else{\r\n          return(\r\n          \r\n          <div className=\"row\">\r\n      <Container className=\"container-fluid\">\r\n\r\n        <Row>\r\n        {menu}\r\n        </Row>\r\n        {this.renderTile(this.state.selectedTile)}\r\n        \r\n          </Container>\r\n      </div>\r\n            );\r\n      }\r\n      }\r\n    }\r\n  \r\n\r\n      export default withGetScreen(Menu);","import React, {Component,useState} from 'react';\r\nimport {Alert,Card,CardImg,CardImgOverlay,CardText,CardBody,CardTitle, Button, Collapse,Row,Col,Container } from 'reactstrap';\r\nimport { Link } from 'react-router-dom';\r\nimport Carousel from \"react-elastic-carousel\";\r\nimport {withGetScreen} from 'react-getscreen'\r\nimport image from \"../assets/placehold.jpeg\"\r\nimport GridLayout from 'react-grid-layout';\r\n\r\nclass Menu extends Component{\r\n  \r\n\r\n  constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        selectedTile:null,\r\n         open:false\r\n          }\r\n          this.close=this.close.bind(this);\r\n  }\r\n\r\nonTileSelect(detail){\r\n  this.setState({selectedTile:detail,\r\n \r\n  });\r\n  \r\n\r\n}\r\n\r\nclose(){\r\n  this.setState({\r\n    open:!this.state.open\r\n  });\r\n}\r\n\r\nrenderTile(detail){\r\n  \r\n  if(detail!=null ){\r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n        <div >\r\n        <Alert color=\"danger\" isOpen={this.state.open}>\r\n          Download <a href=\"#\" className=\"alert-link\">The Gaming Project App</a> to play on your smartphones.\r\n        </Alert>\r\n        </div>\r\n      );\r\n    }\r\n    else{\r\n    return(\r\n    \r\n    \r\n    <Collapse isOpen={this.state.open}>\r\n    <Card >\r\n    <div>\r\n    <Button onClick={this.close}>X</Button>\r\n        \r\n      <CardImg top src={image} alt={detail.name} width=\"100%\" />\r\n      <CardBody>\r\n        <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n        <CardText >{detail.description}</CardText>\r\n      </CardBody>\r\n      </div>\r\n    </Card>\r\n    </Collapse> \r\n  \r\n  \r\n    );\r\n    }\r\n  }\r\n  else{\r\n    return(\r\n      <div></div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n \r\n\r\n  render() {\r\n   \r\n\r\n    const menu = this.props.details.map((detail,i)=> {\r\n     \r\n      if (this.props.isMobile()){\r\n        return (    \r\n        \r\n          <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n          <div  onClick={this.close}>\r\n        <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </Card>\r\n   \r\n        </div>\r\n        </Col>\r\n      \r\n                \r\n        );\r\n      }\r\n\r\n      else if (this.props.isTablet()){\r\n        return (  \r\n        \r\n          \r\n          <Row>\r\n          <div  onClick={this.close}>\r\n        <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        </Card>\r\n   \r\n        </div>\r\n        </Row>\r\n        \r\n                \r\n        );\r\n      }\r\n\r\nelse{\r\n  \r\n    if (i>=12&&i<18){\r\n      return (  \r\n        <Col className=\"col-3 center\" style={{marginBottom:\"20px\"}}>\r\n        <div>\r\n        <Col className=\"col-12 center\" style={{marginBottom:\"20px\"}}>\r\n          <Card key={detail.id} onClick={() => this.onTileSelect(detail)}>\r\n          <Card  onClick={this.close}>\r\n        \r\n          <CardImg src={image}/>\r\n          <CardImgOverlay>\r\n            <CardTitle className=\"font-weight-bolder\">{detail.name}</CardTitle>\r\n          </CardImgOverlay>\r\n        \r\n          </Card> \r\n        \r\n        </Card>\r\n        </Col>\r\n    </div>\r\n    </Col>\r\n      );\r\n      }\r\n      \r\n      \r\n    }\r\n     \r\n    });\r\n\r\n\r\n      \r\n    if (this.props.isMobile()||this.props.isTablet() ){\r\n      return(\r\n          \r\n        <div className=\"row\">\r\n    <Container className=\"container-fluid\">\r\n    {this.renderTile(this.state.selectedTile)}\r\n      <Row>\r\n      {menu}\r\n      </Row>\r\n      \r\n      \r\n        </Container>\r\n    </div>\r\n          );\r\n    }\r\n       else{\r\n          return(\r\n          \r\n          <div className=\"row\">\r\n      <Container className=\"container-fluid\">\r\n\r\n        <Row>\r\n        {menu}\r\n        </Row>\r\n        {this.renderTile(this.state.selectedTile)}\r\n        \r\n          </Container>\r\n      </div>\r\n            );\r\n      }\r\n      }\r\n    }\r\n  \r\n\r\n      export default withGetScreen(Menu);","import React, { Component } from \"react\";\r\nimport { Nav, Navbar, NavbarBrand, NavbarToggler, Collapse, NavItem, Jumbotron } from 'reactstrap';\r\nimport { NavLink } from 'react-router-dom';\r\nimport logo from '../logo.svg';\r\n\r\nclass Header extends Component {\r\n\r\n    constructor(props){\r\n      super(props);\r\n      this.state={\r\n        isNavOpen:false\r\n      };\r\n      this.toggleNav=this.toggleNav.bind(this);\r\n    }\r\n    \r\n    toggleNav(){\r\n      this.setState({\r\n          isNavOpen: !this.state.isNavOpen\r\n    \r\n      });\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <React.Fragment>\r\n            <Navbar dark expand=\"md\">\r\n            <div className=\"container\">\r\n                <NavbarToggler onClick={this.toggleNav} className=\"m-3,\" />\r\n                <img src={logo} style={{width:100, marginTop: -7}} />\r\n                <NavbarBrand className=\"mr-auto\" href=\"/\"></NavbarBrand>\r\n                 <Collapse isOpen={this.state.isNavOpen} navbar>\r\n                <Nav className=\"ml-5\" navbar>\r\n                    \r\n                    \r\n                         <span style={{marginRight:25}}>Play</span>\r\n                         <span style={{marginRight:25}}>Games</span>\r\n                         <span style={{marginRight:25}}>Pricing</span>\r\n                         <span style={{marginRight:25}}>FAQ</span>\r\n                         <span style={{marginRight:25}}>Ping Test</span>\r\n                         <span style={{marginRight:25}}>Contact Us</span>\r\n                   \r\n                   </Nav>\r\n                </Collapse>\r\n            </div>\r\n        </Navbar>\r\n        </React.Fragment>\r\n      \r\n        );\r\n}\r\n}\r\nexport default Header;","import React, { Component } from 'react';\r\nimport {DETAILS} from '../shared/details';\r\nimport Tiles from './tiles'\r\nimport Header from  \"./header\"\r\n\r\nimport Carousel from '@brainhubeu/react-carousel';\r\nimport '@brainhubeu/react-carousel/lib/style.css';\r\nimport { NavbarBrand,Navbar, Nav, NavDropdown, Button, Media, } from \"reactstrap\";\r\n\r\n\r\nclass Main extends Component{\r\n  constructor(props){\r\n    super(props);\r\n    this.state={  \r\n      open: [false, false, false, false, false,false, false, false, false, false],\r\n      games:[],\r\n      tgp:[]\r\n    }\r\n    this.close=this.close.bind(this);\r\n  }\r\n  componentDidMount() {\r\n    fetch('https://the-gaming-project-241406.firebaseio.com/games/tgpGames2.json')\r\n    .then(res => res.json())\r\n    .then(res => {\r\n      let allGames = [\r\n        'SGW2',\r\n        'LOTF',\r\n        'Extinction',\r\n        'Away',\r\n        'Splasher',\r\n        'Grip',\r\n        'BoilingBolt',\r\n        'SGW3',\r\n        'SteelRats',\r\n        'TFITF',\r\n        'Impulsion',\r\n        'Outcast',\r\n        'WRC4',\r\n        'Tempest',\r\n        'Pankapu',\r\n        'DragoDino',\r\n        'Anarcute',\r\n        'Supertrucks',\r\n        'Strikers',\r\n      ]\r\n      let games = [];let tgp=[];\r\n      allGames.forEach(game => {\r\n          games.push({appid: game, desc: res[game].desc, free: res[game].free, title: res[game].title})\r\n      })\r\n      games.forEach((game, index) => tgp.push({\r\n        id: index,\r\n        image: 'https://storage.googleapis.com/thegamingproject/games/' + game.appid + '/header.jpg',\r\n        appid: game.appid,\r\n        title: game.title,\r\n        desc: game.desc,\r\n        free: game.free,\r\n        playable: false,\r\n        overlay: true,\r\n        videoBg: 'https://storage.googleapis.com/thegamingproject/games/' + game.appid + '/videoBg.mp4'\r\n      }));\r\n      this.setState({tgp});\r\n    })\r\n  }\r\n\r\n  close=(id)=>{\r\n    let newOpen = this.state.open;\r\n    this.state.open.forEach((current, index) => {\r\n      console.log(index, id);\r\n      if (index != id) {\r\n        newOpen[index] = false;\r\n      } else {\r\n        newOpen[index] = true;\r\n      }\r\n    })\r\n    console.log(newOpen);\r\n    this.setState({open: newOpen});\r\n  }\r\n\r\n  render() {\r\n  \r\n    var content = [];\r\n    var initial=0;\r\n      var end=initial+4; \r\n    this.state.tgp.forEach((game, i) =>{  \r\n      i=i/4;\r\n      if( i%1==0){\r\n        content.push(\r\n          \r\n          <div className=\"row\" key={game.id}>  \r\n          \r\n  \r\n          <Tiles open={this.state.open} close={this.close} id={i} games={this.state.tgp.slice(initial,end)}/>\r\n         \r\n          </div>\r\n          \r\n        )\r\n        initial+=4;\r\n        end+=4;\r\n      }\r\n  });\r\n\r\n    return (\r\n        <div >\r\n          {content}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default Main;\r\n","import React, { Component } from 'react';\r\nimport logo from './logo.svg';\r\nimport './App.css';\r\nimport {DETAILS}  from './shared/details'\r\nimport Tiles from './components/tiles'\r\nimport Tiles2 from './components/tile2'\r\nimport Tiles3 from './components/tiles3'\r\nimport Tiles4 from './components/tiles4'\r\nimport Main from \"./components/Main\"\r\nimport Header from'./components/header';\r\nimport { NavbarBrand,Navbar, Nav, NavDropdown, Button, Media } from \"reactstrap\";\r\n\r\n\r\nclass App extends Component{\r\n  \r\n\r\n  render() {\r\n    return (\r\n      <div className=\"App\" >\r\n        <Header/>\r\n        <div >\r\n          <Main/>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\n\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport 'bootstrap/dist/css/bootstrap.css';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";"],"sourceRoot":""}